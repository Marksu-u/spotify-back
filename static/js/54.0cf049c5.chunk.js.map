{"version":3,"file":"static/js/54.0cf049c5.chunk.js","mappings":"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","sources":["components/Modal/index.js"],"sourcesContent":["import React, { Suspense, useState, useEffect, lazy, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { apiService } from '../../services/apiService';\nimport './index.css';\n\nconst Input = lazy(() => import('../Input'));\nconst Button = lazy(() => import('../Button'));\nconst Select = lazy(() => import('../Select'));\n\nconst Modal = ({ isOpen, onClose, data, onSubmit, type, actionType }) => {\n  const [formData, setFormData] = useState(data);\n  const [artists, setArtists] = useState([]);\n  const [albums, setAlbums] = useState([]);\n\n  useEffect(() => {\n    setFormData(data);\n  }, [data]);\n\n  useEffect(() => {\n    const fetchAlbums = async () => {\n      try {\n        const fetchedAlbums = await apiService.getAlbums();\n        const transformedAlbums = fetchedAlbums.map((album) => {\n          return {\n            id: album._id,\n            title: album.title,\n          };\n        });\n        setAlbums(transformedAlbums);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const fetchArtists = async () => {\n      try {\n        const fetchedArtists = await apiService.getArtists();\n        const transformedArtists = fetchedArtists.map((artist) => {\n          return {\n            id: artist._id,\n            title: artist.name,\n          };\n        });\n        setArtists(transformedArtists);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchArtists();\n    fetchAlbums();\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(formData, actionType, type)\n      .then(() => {\n        onClose();\n      })\n      .catch((error) => {\n        console.error('Erreur lors de la soumission :', error);\n      });\n  };\n\n  const renderContent = () => {\n    switch (type) {\n      case 'artist':\n        return (\n          <>\n            <Input\n              label=\"Artist Name\"\n              name=\"title\"\n              value={formData.title || ''}\n              onChange={handleChange}\n            />\n          </>\n        );\n      case 'album':\n        return (\n          <>\n            <Input\n              label=\"Album Title\"\n              name=\"title\"\n              value={formData.title || ''}\n              onChange={handleChange}\n            />\n            <Select\n              label=\"Artist\"\n              name=\"artistId\"\n              options={artists}\n              value={formData.artistId || ''}\n              onChange={handleChange}\n            />\n            <Input\n              label=\"Genre\"\n              name=\"genre\"\n              value={formData.genre || ''}\n              onChange={handleChange}\n            />\n          </>\n        );\n      case 'song':\n        return (\n          <>\n            <Input\n              label=\"Song Title\"\n              name=\"title\"\n              value={formData.title || ''}\n              onChange={handleChange}\n            />\n            <Select\n              label=\"Artist\"\n              name=\"artistId\"\n              options={artists}\n              value={formData.artistId || ''}\n              onChange={handleChange}\n            />\n            <Select\n              label=\"Album\"\n              name=\"albumId\"\n              options={albums}\n              value={formData.albumId || ''}\n              onChange={handleChange}\n            />\n          </>\n        );\n      case 'admin':\n        return (\n          <>\n            <Input\n              type=\"email\"\n              label=\"Admin email\"\n              name=\"email\"\n              value={formData.artist || ''}\n              onChange={handleChange}\n            />\n          </>\n        );\n      default:\n        return <p>Unknown type</p>;\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <Suspense fallback={<div>Chargement des audios...</div>}>\n      <div className=\"modal-backdrop\">\n        <div className=\"modal-content\">\n          <form onSubmit={handleSubmit}>\n            {renderContent()}\n            <Button type=\"submit\" label=\"Valider\" />\n            <Button type=\"button\" label=\"Annuler\" onClick={onClose} />\n          </form>\n        </div>\n      </div>\n    </Suspense>\n  );\n};\n\nModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  type: PropTypes.oneOf(['artist', 'song', 'album']).isRequired,\n  actionType: PropTypes.oneOf(['update', 'delete']).isRequired,\n};\n\nexport default memo(Modal);\n"],"names":["Input","lazy","Button","Select","Modal","_ref","isOpen","onClose","data","onSubmit","type","actionType","formData","setFormData","useState","artists","setArtists","albums","setAlbums","useEffect","async","transformedArtists","apiService","getArtists","map","artist","id","_id","title","name","error","console","fetchArtists","transformedAlbums","getAlbums","album","fetchAlbums","handleChange","e","value","target","prevData","_jsx","Suspense","fallback","children","className","_jsxs","preventDefault","then","catch","renderContent","_Fragment","label","onChange","options","artistId","genre","albumId","onClick","memo"],"sourceRoot":""}