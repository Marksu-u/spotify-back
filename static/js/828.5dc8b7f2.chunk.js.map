{"version":3,"file":"static/js/828.5dc8b7f2.chunk.js","mappings":"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","sources":["components/Card/index.js"],"sourcesContent":["import React, { useState, lazy } from 'react';\nimport PropTypes from 'prop-types';\nimport { apiService } from '../../services/apiService';\nimport { notificationService } from '../../services/notificationService';\nimport './index.css';\n\nconst Button = lazy(() => import('../Button'));\nconst Modal = lazy(() => import('../Modal'));\n\nconst Card = ({ type, data, onClick }) => {\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [currentData, setCurrentData] = useState(null);\n  const [actionType, setActionType] = useState(null);\n\n  const handleEdit = () => {\n    setModalOpen(true);\n    setCurrentData(data);\n    setActionType('update');\n  };\n\n  const handleDelete = () => {\n    handleAction('delete', data);\n  };\n\n  const handleSubmit = (editedData) => {\n    handleAction(actionType, { ...data, ...editedData });\n  };\n\n  const handleAction = async (actionType, editedData) => {\n    const actionMap = {\n      delete: {\n        artist: 'deleteArtist',\n        song: 'deleteAudio',\n        album: 'deleteAlbum',\n        admin: 'deleteAdmin',\n      },\n      update: {\n        artist: 'editArtist',\n        song: 'editAudio',\n        album: 'editAlbum',\n        admin: 'editAdmin',\n      },\n    };\n\n    const performAction = async (type, data) => {\n      const actionFunction = actionMap[actionType][type];\n      if (!actionFunction) {\n        throw new Error(`Unknown type for ${actionType}`);\n      }\n      return await apiService[actionFunction](data);\n    };\n\n    try {\n      const data = actionType === 'delete' ? editedData.id : editedData;\n      console.log(`${actionType === 'delete' ? 'Delete' : 'Edit'}: `, data);\n\n      await performAction(type, data);\n      notificationService.notify(\n        `${\n          actionType === 'delete' ? 'Item deleted' : 'Enregistré!'\n        } successfully`,\n        'success'\n      );\n\n      if (actionType !== 'delete') {\n        setModalOpen(false);\n      }\n    } catch (error) {\n      console.error(\n        `Error ${actionType === 'delete' ? 'deleting' : 'updating'} item:`,\n        error\n      );\n      notificationService.notify(\n        `Error ${actionType === 'delete' ? 'deleting' : 'updating'} item`,\n        'error'\n      );\n    }\n  };\n\n  const renderContent = () => {\n    switch (type) {\n      /* ------ ARTISTE ------ */\n      case 'artist':\n        return (\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <div className=\"card-details\">{data.title}</div>\n            </div>\n          </div>\n        );\n\n      /* ------ AUDIO ------ */\n      case 'song':\n        return (\n          <div className=\"card\">\n            <div className=\"card-image\">\n              <img src={data.picture} alt={data.album} />\n            </div>\n            <div className=\"card-content\">\n              <div className=\"card-title\">{data.title}</div>\n              <div className=\"card-details\">\n                <div>\n                  {data.artist} - {data.album}\n                </div>\n                <div>{data.releaseDate}</div>\n              </div>\n              <div className=\"card-genre\">\n                <div>{data.genre}</div>\n              </div>\n            </div>\n          </div>\n        );\n\n      /* ------ ALBUM ------ */\n      case 'album':\n        return (\n          <div className=\"card\">\n            <div className=\"card-image\">\n              <img src={data.picture} alt={data.title} />\n            </div>\n            <div className=\"card-content\">\n              <div className=\"card-title\">{data.title}</div>\n              <div className=\"card-details\">\n                <div>\n                  {data.artist} {data.date}\n                </div>\n              </div>\n              <div className=\"card-genre\">\n                <div>Genre : {data.genre}</div>\n              </div>\n            </div>\n          </div>\n        );\n\n      /* ------ ADMIN ------ */\n      case 'admin':\n        return (\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <div className=\"card-title\">{data.title}</div>\n              <div className=\"card-details\">\n                <div>{data.artist}</div>\n              </div>\n            </div>\n          </div>\n        );\n\n      /* ------ DEFAULT ------ */\n      default:\n        return <div>Données non disponibles</div>;\n    }\n  };\n\n  const renderCRUDButtons = () => (\n    <div className=\"button-container\">\n      <Button label=\"Modifier\" onClick={handleEdit} />\n      <Button label=\"Supprimer\" onClick={handleDelete} />\n    </div>\n  );\n\n  return (\n    <div className=\"card\" onClick={onClick}>\n      {renderContent()}\n      {renderCRUDButtons()}\n      {isModalOpen && (\n        <Modal\n          isOpen={isModalOpen}\n          onClose={() => setModalOpen(false)}\n          data={currentData}\n          onSubmit={handleSubmit}\n          actionType={actionType}\n          type={type}\n        />\n      )}\n    </div>\n  );\n};\n\nCard.propTypes = {\n  type: PropTypes.oneOf(['artist', 'song', 'album', 'admin']),\n  title: PropTypes.string,\n  image: PropTypes.string,\n  data: PropTypes.any,\n  onClick: PropTypes.func,\n};\n\nCard.defaultProps = {\n  onClick: () => {},\n};\n\nexport default Card;\n"],"names":["Button","lazy","Modal","Card","_ref","type","data","onClick","isModalOpen","setModalOpen","useState","currentData","setCurrentData","actionType","setActionType","handleEdit","handleDelete","handleAction","async","editedData","actionMap","delete","artist","song","album","admin","update","id","console","log","concat","actionFunction","Error","apiService","performAction","notificationService","notify","error","_jsxs","className","children","renderContent","_jsx","title","src","picture","alt","releaseDate","genre","date","label","isOpen","onClose","onSubmit","defaultProps"],"sourceRoot":""}